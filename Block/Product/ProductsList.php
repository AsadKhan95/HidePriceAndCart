<?php

namespace PME\Hideprice\Block\Product;

use Magento\Framework\Serialize\Serializer\Json;
use PME\Hideprice\Helper\Data;

class ProductsList extends \Magento\CatalogWidget\Block\Product\ProductsList
{
    public function _construct()
    {
        parent::_construct(); // TODO: Change the autogenerated stub
    }

    public function __construct(
        \Magento\Catalog\Block\Product\Context $context,
        \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory $productCollectionFactory,
        \Magento\Catalog\Model\Product\Visibility $catalogProductVisibility,
        \Magento\Framework\App\Http\Context $httpContext,
        \Magento\Rule\Model\Condition\Sql\Builder $sqlBuilder,
        \Magento\CatalogWidget\Model\Rule $rule,
        \PME\Hideprice\Block\Testttt $test,
        Data $helper,
        \Magento\Widget\Helper\Conditions $conditionsHelper,
        array $data = [], Json $json = null)
    {
        $this->_helper = $helper;
        $this->test = $test;
        parent::__construct($context, $productCollectionFactory, $catalogProductVisibility, $httpContext, $sqlBuilder, $rule, $conditionsHelper, $data, $json);
    }

    public function getIfNotLoggedIn()
    {
        return "<p>".$this->_helper->custompricetext()." <a href=".$this->_helper->getBaseURL().$this->_helper->linkoption().">"
                    .$this->_helper->cmsLabel()."</a></p><br><p>".$this->_helper->customcarttext()."</P>";
    }

    public function getEnable()
    {
        return $this->_helper->getIsEnable();
    }

    public function getLoggedIn()
    {
        return $this->_helper->isCustomerLoggedIn();
    }

    public function getLinkOption()
    {
        return $this->_helper->linkoption();
    }

    public function getCustomPrice()
    {
        return $this->_helper->custompricetext();
    }

    public function getUrll()
    {
        return $this->_helper->getBaseURL();
    }

    public function getCartText()
    {
        return $this->_helper->customcarttext();
    }

    public function getCategoryHide()
    {
        return $this->_helper->categoryHide();
    }

    public function getStoreId()
    {
        return $this->_helper->getStoreId();
    }

    public function getStoreviewData()
    {
        return $this->_helper->storeviewData();
    }

    public function getCategoryProductData()
    {
        return $this->_helper->getCurrentCategoryProduct();
    }

    public function getProductHot()
    {
        return $this->_helper->getProductHot();
    }

    public function checking()
    {
        //return $this->test->testing();
        return "123Testing";
    }
}